If you have some missing data in your data set 
you can fill the missing data by the mean value  and it's the best 
solution 

you can use pandas or numpy or sklearn to fill it with mean

using sklearn

from sklearn.preprocessing import Imputer

imputer = Imputer(missing_values = 'NaN',strategy = 'mean', axis = 0)
#mean is the defult value
# axis =0 this mean take the mean of the column

imputer = imputer.fit(x[:,slice of the u want to use column]) 

#it will replace all the missing data with mean
X[:,1:3] = imputer.transform(X[:,1:3])
#this what will replaces each NaN value to the mean



to change the categorical variable into 
0,1,2,3,..n it will transform all the categories  
to encoded value

from sklearn.preprocessing import LabelEncoder, OneHotEncoder 

label_encoder_X = LabelEncoder()
X[:,0] = label_encoder_X.fit_transform(X[:,0])

#after we encode the categorical varaible inot value 
# we need to create a dummy variables
#number of column will equal the number categories

onehotencoder = OnehotEncoder(categorical_features = [0])
X = onehotencoder.fit_transform(X).toarray()

# now for the output

labelencoder_y = LabelEncoder()
y= labelencoder_y.fit_transform(y)



from sklearn.model_selection import train_test_split 

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=.20)

